#!/bin/bash
# kver

set -o pipefail
set -o nounset


# Defaults
KUBECTL_VERSION=""
PAGER=${PAGER:-less}
MAC_VERSION=$(sysctl -n machdep.cpu.brand_string)


# Help function
function show_help() {
cat > /dev/stdout << END
$ kver <version>

EXAMPLE:
    kver 1.22.9
    kver - # switch to previous version

END
}


# Add -h help option commandline flag
while getopts "h?-:" opt
do
    case $opt in
        h|\?)
            show_help
            exit 0
            ;;
    esac
done
shift "$((OPTIND-1))"



# Common functions

function switch_version() {
    if [[ ! -d ~/.kver ]]; then
        mkdir ~/.kver
        echo 'export PATH="~/.kver:$PATH"' >> ~/.bashrc
    fi
    
    if [[ $MAC_VERSION == *"Apple"* ]]; then
        CHIP="arm64"
    elif [[ $MAC_VERSION == *"Intel"* ]]; then
        CHIP="amd64"
    fi

    if [[ ! -f ~/.kver/kubectl$KUBECTL_VERSION ]]; then
        curl https://storage.googleapis.com/kubernetes-release/release/v$KUBECTL_VERSION/bin/darwin/$CHIP/kubectl -o kubectl$KUBECTL_VERSION
        chmod +x kubectl$KUBECTL_VERSION
        mv kubectl$KUBECTL_VERSION ~/.kver
    fi
    
    if [[ -f ~/.kver/k ]]; then
        rm ~/.kver/k
    fi
    ln -s ~/.kver/kubectl$KUBECTL_VERSION ~/.kver/k
    ln -s ~/.kver/kubectl$KUBECTL_VERSION ~/.kver/kubectl
    echo "kubectl switched to version $KUBECTL_VERSION"
    echo "use shortcut 'k', like 'k version' or 'k get po -A'"
    exit 
}


# If no args, switch to matching server version.
#   If no server exit
if [[ $# -eq 0 || -z $1 ]]
then
    KUBECTL_SERVER_VERSION=$(kubectl version --short|grep 'Server Version' | grep -Eo '[0-9.]{1,4}' | tr -d '[:space:]')
    LEN_KUBECTL_SERVER_VERSION=${#KUBECTL_SERVER_VERSION}
    if [[ $LEN_KUBECTL_SERVER_VERSION -eq 0 ]]; then
        echo "Kubernetes cluster is unavailable"
        exit 1
    else
        KUBECTL_VERSION=$KUBECTL_SERVER_VERSION
        switch_version
    fi
# Else, if there's args.
# Switch to specified version.
else
    TEST_1ST_ARG=$(echo $1 | grep -Eo '[0-9.]{1,4}' | tr -d '[:space:]')
    LEN_1ST_ARG=${#TEST_1ST_ARG}
    if (( $LEN_1ST_ARG == 6 || $LEN_1ST_ARG == 7 )); then
        KUBECTL_VERSION=$1
        switch_version
    else
        echo "Version ARG should be in format of 1.22.9"
        exit 1
    fi
fi
